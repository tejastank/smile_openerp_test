-
  I test all search and first reads for all act_windows
-
  !python {model: ir.actions.act_window}: |
    import time
    import datetime
    from dateutil.relativedelta import relativedelta

    act_window_ids = self.search(cr, uid, [], context=context)

    # under the form (act_window_name, model)
    ignored_act_windows = [('Bill Payment', 'account.voucher'),
                           ('Customer Payment', 'account.voucher')]
    errors = []
    user_context = self.pool.get('res.users').context_get(cr, uid, context)
    # context built as in webclient: addons/openerp/utils/tools.py
    # and addons/openerp/utils/rpc.py: context_reload
    user_context.update({
        'active_id': False,
        'active_ids': [],
        'uid': uid,
        'current_date': time.strftime('%Y-%m-%d'),
        'time': time,
        'datetime': datetime,
        'relativedelta': relativedelta,})

    for act_window in self.browse(cr, uid, act_window_ids, context):
        model = act_window.res_model
        if (act_window.name, model) in ignored_act_windows:
            # Ignore buggy models from server and official addons
            continue
        buf_context = user_context.copy()
        cr.execute('SAVEPOINT general_act_window_test')
        try:
            test_context = eval(act_window.context or '{}', buf_context) or buf_context
            test_domain = eval(act_window.domain or '[]', buf_context) or []
            test_limit = int(act_window.limit) if act_window.limit else None

            test_ids = self.pool.get(model).search(cr, uid, test_domain, offset=0, limit=test_limit, order=None, context=test_context, count=False)
            self.pool.get(model).read(cr, uid, test_ids, [], test_context)
        except Exception as e:
            err_info = (act_window.name, act_window.res_model, act_window.domain, act_window.context, repr(e))
            errors.append(err_info)
            cr.execute('ROLLBACK TO general_act_window_test')
    if errors:
        err_details = "\n".join(["(%s, %s, %s, %s): %s" % (act_window, model, test_domain, test_context, err) for act_window, model, test_domain, test_context, err in errors])
        raise Exception('Error in search/read for act_window/model and error:\n%s' % err_details)

